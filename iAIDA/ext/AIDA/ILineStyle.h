// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef AIDA_ILINESTYLE_H
#define AIDA_ILINESTYLE_H 1

//  This file is part of the AIDA library
//  Copyright (C) 2002 by the AIDA team.  All rights reserved.
//  This library is free software and under the terms of the
//  GNU Library General Public License described in the LGPL.txt 

#include <string>
#include <vector>

#include "AIDA/IBrushStyle.h"

namespace AIDA {

/**
 * Style for all lines (axis lines, legend box outlines, etc.)
 *
 * @author The AIDA team (http://aida.freehep.org/)
 */

class ILineStyle : virtual public IBrushStyle {

public: 
    /// Destructor.
    virtual ~ILineStyle() { /* nop */; }

  /**
   * Get list of line types supported by this implementation.
   */
    virtual std::vector<std::string>  availableLineTypes() const = 0;

  /**
   * Get line type currently in use.
   */
    virtual std::string lineType() const = 0;

  /**
   * Get current line thickness.
   */
    virtual int thickness() const = 0;

  /**
   * Set current line type e.g. "dotted".
   * @return false if line type not known to this implementation.
   */
    virtual bool setLineType(const std::string & newLineType) = 0;

  /**
   * Set thickness (exact meaning is implementation-dependent, 
   * but <0 means invisible).
   * @return false if value not supported by this implementation.
   */
    virtual bool setThickness(int newThickness) = 0;
}; // class
} // namespace AIDA
#endif /* ifndef AIDA_ILINESTYLE_H */
