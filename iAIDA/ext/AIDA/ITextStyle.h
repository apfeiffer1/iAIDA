// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef AIDA_ITEXTSTYLE_H
#define AIDA_ITEXTSTYLE_H 1

//  This file is part of the AIDA library
//  Copyright (C) 2002 by the AIDA team.  All rights reserved.
//  This library is free software and under the terms of the
//  GNU Library General Public License described in the LGPL.txt 

#include <string>
#include <vector>

#include "AIDA/IBrushStyle.h"

namespace AIDA {

/**
 * Style for all text (e.g. axis labels, legend box text etc.)
 *
 * @author The AIDA team (http://aida.freehep.org/)
 */

class ITextStyle : virtual public IBrushStyle {

public: 
    /// Destructor.
    virtual ~ITextStyle() { /* nop */; }

  /** 
   * Get list of fonts available in this implementation.
   */
    virtual std::vector<std::string>  availableFonts() const = 0;

  /**
   * Get current font size.
   */
    virtual double fontSize() const = 0;

  /**
   * Set current font size.
   * @return false if size not supported by this implementation.
   */
    virtual bool setFontSize(double size) = 0;

  /**
   * Get name of current font.
   */
    virtual std::string font() const = 0;

  /**
   * Set current font, e.g. "timesNewRoman" or "courier".
   * @return false if font not supported by this implementation.
   */
    virtual bool setFont(const std::string & font) = 0;

    virtual bool isBold() const = 0;

    virtual bool isItalic() const = 0;

    virtual bool isUnderlined() const = 0;

    virtual bool setBold(bool bold = true) = 0;

    virtual bool setItalic(bool italic = true) = 0;

    virtual bool setUnderlined(bool underlined = true) = 0;
}; // class
} // namespace AIDA
#endif /* ifndef AIDA_ITEXTSTYLE_H */
