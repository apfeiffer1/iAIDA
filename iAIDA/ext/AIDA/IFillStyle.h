// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef AIDA_IFILLSTYLE_H
#define AIDA_IFILLSTYLE_H 1

//  This file is part of the AIDA library
//  Copyright (C) 2002 by the AIDA team.  All rights reserved.
//  This library is free software and under the terms of the
//  GNU Library General Public License described in the LGPL.txt 

#include <string>
#include <vector>

#include "AIDA/IBrushStyle.h"

namespace AIDA {

/**
 * Style for all filled areas (boxes, regions, histograms, etc.)
 *
 * @author The AIDA team (http://aida.freehep.org/)
 */

class IFillStyle : virtual public IBrushStyle {

public: 
    /// Destructor.
    virtual ~IFillStyle() { /* nop */; }

  /**
   * Get a list of patterns available in this implementation.
   */
    virtual std::vector<std::string>  availablePatterns() const = 0;

  /** 
   * Get name of current pattern.
   */
    virtual std::string pattern() const = 0;

  /**
   * Set current pattern, e.g. "crossHatch", "solid".
   * @return false if pattern not known to this implementation.
   */
    virtual bool setPattern(const std::string & pattern) = 0;
}; // class
} // namespace AIDA
#endif /* ifndef AIDA_IFILLSTYLE_H */
