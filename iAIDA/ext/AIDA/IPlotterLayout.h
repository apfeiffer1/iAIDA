// -*- C++ -*-
// AID-GENERATED
// =========================================================================
// This class was generated by AID - Abstract Interface Definition          
// DO NOT MODIFY, but use the org.freehep.aid.Aid utility to regenerate it. 
// =========================================================================
#ifndef AIDA_IPLOTTERLAYOUT_H
#define AIDA_IPLOTTERLAYOUT_H 1

//  This file is part of the AIDA library
//  Copyright (C) 2002 by the AIDA team.  All rights reserved.
//  This library is free software and under the terms of the
//  GNU Library General Public License described in the LGPL.txt 

#include <string>
#include <vector>

namespace AIDA {

/**
 * Interface to permit customization of the layout
 * of scene objects.
 *
 * @author The AIDA team (http://aida.freehep.org/)
 *
 */

class IPlotterLayout {

public: 
    /// Destructor.
    virtual ~IPlotterLayout() { /* nop */; }

  /**
   * Return to original (construction time) state. Explicitly 
   * set parameters will be set to defaults and may be overridden 
   */
    virtual void reset() = 0;

  /**
   * Set a parameter. 
   * @param paramName Name of the parameter.
   * @param options String of options.
   * @return false if parameter (or its options) unknown or invalid.
   */
    virtual bool setParameter(const std::string & paramName, double paramValue) = 0;

  /** 
   * Get parameter value.
   */
    virtual double parameterValue(const std::string & paramName) = 0;

  /**
   * Get list of the available parameters (implementation-dependent)
   */
    virtual std::vector<std::string>  availableParameters() const = 0;
}; // class
} // namespace AIDA
#endif /* ifndef AIDA_IPLOTTERLAYOUT_H */
